events {}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    resolver 127.0.0.11 valid=30s;

    server {
        listen 80;
        server_name localhost;
        set $be_vendure "be-vendure:3000";

        location ^~ /api {
            proxy_pass http://$be_vendure;
        }

        location ^~ /admin {
            proxy_pass http://$be_vendure;
        }

        location ^~ /admin-api {
            proxy_pass http://$be_vendure;
        }

        location ^~ /graphiql {
            proxy_pass http://$be_vendure;
        }

        location /assets {
            proxy_pass http://$be_vendure;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /.well-known/appspecific/com.chrome.devtools.json {
            return 204;
        }

        # WebSocket для HMR
        location /sockjs-node/ {
            # host.docker.internal - access to local machine
            proxy_pass http://host.docker.internal:4200;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Для Webpack 5 dev server
        location /ws {
            proxy_pass http://host.docker.internal:4200;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }


        location / {
            proxy_pass http://host.docker.internal:4200;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
