version: '3.8'

services:
  be-core-service:
    build:
      context: .
      dockerfile: Dockerfile.opt
      target: production
    container_name: be-core-service-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/be_core_db
      - REDIS_URL=redis://redis:6379
    networks:
      - backend-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: postgres-prod
    environment:
      POSTGRES_DB: be_core_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis-prod
    networks:
      - backend-network
    restart: unless-stopped

  # Nginx как reverse proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - backend-network
    depends_on:
      - be-core-service
    restart: unless-stopped

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
